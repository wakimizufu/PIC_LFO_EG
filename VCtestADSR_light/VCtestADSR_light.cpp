// VCtestADSR_light.cpp : このファイルには 'main' 関数が含まれています。プログラム実行の開始と終了がそこで行われます。
//

#include <iostream>

#define EXP_CURVE_LENGTH 256

uint16_t expCurve[EXP_CURVE_LENGTH] = {
0,19,39,58,77,95,113,131,148,165,182,198,214,230,245,260,275,
289,304,318,331,345,358,371,383,396,408,420,432,443,454,465,476,487,
497,507,517,527,537,546,556,565,574,582,591,599,607,615,623,631,639,
646,653,661,668,675,681,688,694,701,707,713,719,725,731,737,742,748,
753,758,763,768,773,778,783,787,792,796,801,805,809,814,818,822,825,
829,833,837,840,844,847,851,854,857,861,864,867,870,873,876,879,881,
884,887,889,892,894,897,899,902,904,906,909,911,913,915,917,919,921,
923,925,927,929,931,933,934,936,938,939,941,943,944,946,947,949,950,
951,953,954,955,957,958,959,961,962,963,964,965,966,967,968,970,971,
972,973,974,974,975,976,977,978,979,980,981,981,982,983,984,985,985,
986,987,987,988,989,989,990,991,991,992,993,993,994,994,995,995,996,
996,997,997,998,998,999,999,1000,1000,1001,1001,1001,1002,1002,1003,1003,1003,
1004,1004,1004,1005,1005,1006,1006,1006,1006,1007,1007,1007,1008,1008,1008,1009,1009,
1009,1009,1010,1010,1010,1010,1011,1011,1011,1011,1011,1012,1012,1012,1012,1012,1013,
1013,1013,1013,1013,1014,1014,1014,1014,1014,1014,1015,1015,1015,1015,1015,1015,1015,1016 };


/*

  uint32_t n = 0;

  double Atm = fs * 0.005;    //アタック 2ms～1.5s
  double Dtm = fs * 0.070;    //ディケイ 2ms～5s
  double Slv = 0.5;           //サスティン レベル(0～+1)
  double Stm = fs * 0.100;    //サスティン タイム 0ms～
  double Rtm = fs * 0.020;    //リリース 2ms～5s
  double Rpoint = 0;
  //ADSR(vca, A, D, S, R, gate, duration);

   //アタック 2ms～1.5s
  for (n = 0; n < Atm; n++) {
      Rpoint = 1.0 - exp(-5.0 * n / Atm);
      std::cout << Rpoint << "\n";
  }

  //ディケイ 2ms～5s
  for (; n < Dtm; n++)
  {
      Rpoint = Slv + (1 - Slv) * exp(-5.0 * (n - Atm) / Dtm);
      std::cout << Rpoint << "\n";
  }

  //サスティン 200ms
  for (n = 0; n < Stm; n++)
  {
      Rpoint = Slv;
      std::cout << Rpoint << "\n";
  }

  //リリース 2ms～5s
  for (n=0; n < Rtm; n++)
  {
      Rpoint = Rpoint * exp(-5.0 * n / Rtm);
      std::cout << Rpoint << "\n";
  }
*/


uint16_t getExpIndex(uint16_t value , double max) {

    uint16_t temp = (value / max) * (EXP_CURVE_LENGTH - 1);

    if (temp > (EXP_CURVE_LENGTH - 1) )temp = (EXP_CURVE_LENGTH - 1);

    return temp;
}

int main()
{
    /*出力するサンプル数 (標本化周波数*秒数)*/
    uint16_t fs = 2000; /* 標本化周波数 */
    uint16_t length = fs * 1;
    uint16_t n = 0;

    double Atm = fs * 0.02;   //アタック 2ms:40～1.5s:3000
    double Dtm = fs * 0.2;    //ディケイ 2ms:40～5s:10000
    double Slv = 500;         //サスティン レベル(0～+1)
    double Stm = fs * 0.100;    //サスティン タイム 0ms～
    double Rtm = fs * 0.4;    //リリース 2ms:40～5s:10000
  
    uint16_t Rpoint = 0;
    double dTemp;
    
    //ADSR(vca, A, D, S, R, gate, duration);

     //アタック 2ms～1.5s
    for (n = 0; n < Atm; n++) {
        Rpoint = expCurve[getExpIndex(n, Atm)];
        std::cout << Rpoint << "\n";
    }

    
    //ディケイ 2ms～5s
    for (n = 0; n < Dtm; n++)
    {
        dTemp = (double)1023 - expCurve[getExpIndex(n, Dtm)];
        dTemp = Slv + ((1023 - Slv) * (dTemp/1023));
        Rpoint = (uint16_t)dTemp;
        std::cout << dTemp << "\n";
    }
    
    //サスティン 200ms
    for (n = 0; n < Stm; n++)
    {
        Rpoint = (uint16_t)Slv;
        std::cout << Rpoint << "\n";
    }
    
    //リリース 2ms～5s
    for (n=0; n < Rtm; n++)
    {
        dTemp = (double)1023 - expCurve[getExpIndex(n, Rtm)];
        dTemp = ( Rpoint * (dTemp / 1023));
        std::cout << dTemp << "\n";
    }
    

}

// プログラムの実行: Ctrl + F5 または [デバッグ] > [デバッグなしで開始] メニュー
// プログラムのデバッグ: F5 または [デバッグ] > [デバッグの開始] メニュー

// 作業を開始するためのヒント: 
//    1. ソリューション エクスプローラー ウィンドウを使用してファイルを追加/管理します 
//   2. チーム エクスプローラー ウィンドウを使用してソース管理に接続します
//   3. 出力ウィンドウを使用して、ビルド出力とその他のメッセージを表示します
//   4. エラー一覧ウィンドウを使用してエラーを表示します
//   5. [プロジェクト] > [新しい項目の追加] と移動して新しいコード ファイルを作成するか、[プロジェクト] > [既存の項目の追加] と移動して既存のコード ファイルをプロジェクトに追加します
//   6. 後ほどこのプロジェクトを再び開く場合、[ファイル] > [開く] > [プロジェクト] と移動して .sln ファイルを選択します
